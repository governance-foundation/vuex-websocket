name: Build

on: [push]

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [8.x, 10.x, 12.x]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm test
        env:
          CI: true

      # - name: Push to Coveralls
      #   uses: coverallsapp/github-action@master
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     path-to-lcov: ./build/coverage/lcov.info

      # - name: Push Docs
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./docs/
      #     enable_jekyll: false
      #     allow_empty_commit: false
      #     force_orphan: true
      #     publish_branch: gh-pages

      # - name: get release notes
      #   run: |
      #     source <(curl -sL https://github.com/aem-design/aemdesign-docker/releases/latest/download/github_get_version.sh)
      #     echo "===START==="
      #     echo $GIT_RELEASE_NOTES
      #     echo "====END===="
      #     echo CURRENT_VERSION=$CURRENT_VERSION

      # - name: Create release ${{ env.GITHUB_TAG }}
      #   if: github.ref == 'refs/heads/master'
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ env.GITHUB_TAG }}
      #     release_name: ${{ env.GITHUB_TAG }}
      #     body: ${{ env.GIT_RELEASE_NOTES }}
      #     draft: false
      #     prerelease: false

      # - name: upload release asset - libdynalib-utils-${{ env.GITHUB_TAG }}.zip
      #   if: github.ref == 'refs/heads/master'
      #   uses: actions/upload-release-asset@v1.0.2
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: build/libdynalib-utils.so
      #     asset_name: libdynalib-utils.so
      #     asset_content_type : "application/octet-stream"
